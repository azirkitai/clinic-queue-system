✅ TASK: Lock content to 16:9, only outer box follows TV (letterbox)

Goal (non-negotiable):

Kandungan kekal ratio 16:9, tak pernah stretch.

Scaling ikut saiz TV tapi hanya ruang luar (border hitam) yang berubah, bukan content.

Sentiasa center dan penuh setakat muat (contain), dengan border hitam di kiri/kanan atau atas/bawah bila perlu.

Acceptance criteria:

Pada 1920×1080, 1366×768, 3840×2160 → content maintain 16:9, tiada overflow, tiada scrollbars.

Tiada distorsi font/gambar (tiada “leper”/“gemuk”).

Background hitam mengisi ruang lebihan (letterbox/pillarbox).

Zoom 100% dan fullscreen tetap kemas.

Implement exactly this HTML/CSS

HTML (minimal shell):

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>TV Display</title>
  <link rel="stylesheet" href="tv.css" />
</head>
<body>
  <div class="tv-frame">
    <div class="tv-content">
      <!-- ====== START: MY FIXED 16:9 CONTENT ====== -->
      <div class="screen">
        <h1>PAPARAN GILIRAN</h1>
        <div class="grid">
          <div class="cell">Kaunter 1 — A102</div>
          <div class="cell">Kaunter 2 — B205</div>
          <div class="cell">Kaunter 3 — C033</div>
          <div class="cell">Kaunter 4 — D410</div>
        </div>
      </div>
      <!-- ====== END: MY FIXED 16:9 CONTENT ====== -->
    </div>
  </div>
  <script src="tv.js"></script>
</body>
</html>


CSS (letterbox behaviour):

/* Fill the physical screen with black. Only .tv-content scales. */
html, body {
  margin: 0;
  height: 100%;
  width: 100%;
  background: #000;           /* OUTER BORDER (SAFE) */
}

/* Center the 16:9 box and let it scale to the largest size that fits */
.tv-frame {
  height: 100vh;
  width: 100vw;
  display: grid;
  place-items: center;        /* perfectly center */
}

/* The ONLY element that scales. Keeps 16:9. */
.tv-content {
  aspect-ratio: 16 / 9;       /* lock ratio */
  width: min(100vw, 177.78vh);/* scale to fit without overflow */
  height: auto;
  background: #111;           /* inner background */
  color: #fff;
  overflow: hidden;           /* no scrollbars */
  display: flex;
}

/* Your actual screen layout (design inside safe area) */
.screen {
  box-sizing: border-box;
  padding: 2.5%;              /* safe margins inside */
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 2%;
}

h1 {
  margin: 0 0 1%;
  font-weight: 800;
  /* scale with width of the 16:9 box, not with device px */
  font-size: 4.2vw;           /* responsive within the safe box */
  line-height: 1.1;
}

.grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 2%;
  font-size: 2.6vw;           /* also scales with the box */
}

.cell {
  background: #1b1b1b;
  padding: 2%;
  border-radius: 0.8vw;
  text-align: center;
}

/* Optional: tiny tweaks for very small TVs (<= 1366 width) */
@media (max-width: 1400px) {
  h1 { font-size: 5vw; }
  .grid { font-size: 3.2vw; }
}

/* Fallback for older browsers/TVs that DON'T support aspect-ratio */
@supports not (aspect-ratio: 16 / 9) {
  .tv-content {
    position: relative;
    width: min(100vw, 177.78vh);
    height: calc((min(100vw, 177.78vh)) * 9 / 16);
  }
}


JS (optional fullscreen-on-load, don’t force if remote blocks it):

document.addEventListener('DOMContentLoaded', () => {
  // Optional: request fullscreen once user clicks or presses a key
  const goFS = () => {
    const el = document.documentElement;
    if (el.requestFullscreen) el.requestFullscreen();
    window.removeEventListener('click', goFS);
    window.removeEventListener('keydown', goFS);
  };
  window.addEventListener('click', goFS);
  window.addEventListener('keydown', goFS);
});

Exactly what I want you to do (tell this to the agent)

Apply the HTML/CSS above. Jangan ubah ratio 16:9.

Semua layout/typography di dalam .tv-content sahaja. Jangan styling luar.

Jangan set width/height tetap (px) pada container utama. Guna kod width: min(100vw, 177.78vh) seperti di atas.

Pastikan tiada scrollbar pada mana-mana resolusi TV standard: 1366×768, 1920×1080, 4K.

Uji di Chrome DevTools (Mac): 1920×1080, 1366×768. Confirm letterbox hitam muncul bila perlu.

Jangan “fit stretch”. Content mesti maintain 16:9 — lebihan ruang biar hitam.

If you can’t reproduce my issue, share screenshots of the three resolutions above with visible rulers to prove no overflow/distortion.

Ringkas (bahasa paling direct untuk agent)

“Kekalkan content di dalam satu kotak 16:9 yang tidak pernah berubah ratio. Kotak ini sahaja yang scale untuk mengisi skrin setakat muat (contain). Apa-apa ruang selebihnya mesti jadi border hitam. Jangan stretch, jangan potong. Guna aspect-ratio:16/9 + width:min(100vw,177.78vh). Semua teks/elemen dalam kotak tu scale pakai vw supaya ikut kotak, bukan ikut device.”